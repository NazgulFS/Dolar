{"version":3,"sources":["components/Dolar.jsx","components/NavBar.jsx","components/Noticias.jsx","App.js","serviceWorker.js","index.js"],"names":["Dolar","oficial","blue","turista","bolsa","compra","variacion","Container","CardDeck","id","Card","bg","className","text","Header","nombre","Body","ListGroup","variant","Item","Row","Col","venta","Footer","NavBar","Navbar","collapseOnSelect","expand","Brand","href","src","alt","Toggle","aria-controls","Noticias","noticias","CardColumns","slice","map","noticia","key","url","Img","urlToImage","target","rel","title","author","App","useState","guardarNoticias","actualizarOficial","actualizarBlue","actualizarTurista","actualizarBolsa","consultarAPI","a","fetch","api","json","dolares","casa","consultarNoticias","res","articles","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+XA8IeA,G,MA1ID,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,MAQnC,MANsB,cAAnBD,EAAQE,OACPF,EAAQE,OAAS,IACY,cAAtBF,EAAQG,YACfH,EAAQG,UAAY,KAIpB,kBAAC,WAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,GAAG,gBACT,kBAACC,EAAA,EAAD,CACIC,GAAG,UACHC,UAAU,eACVC,KAAK,SAEL,kBAACH,EAAA,EAAKI,OAAN,KACI,wBAAIF,UAAU,iBAAiBX,EAAQc,SAE3C,kBAACL,EAAA,EAAKM,KAAN,CACIL,GAAG,WAEH,kBAACM,EAAA,EAAD,CAAWC,QAAQ,QAAQN,UAAU,eACjC,kBAACK,EAAA,EAAUE,KAAX,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,sCACA,4BAAKpB,EAAQI,OAAb,MAEJ,kBAACgB,EAAA,EAAD,KACI,qCACA,4BAAKpB,EAAQqB,YAMjC,kBAACZ,EAAA,EAAKa,OAAN,CAAaX,UAAU,eACnB,0BAAMA,UAAU,qBAAhB,iBAAgDX,EAAQK,UAAxD,OAGR,kBAACI,EAAA,EAAD,CACIC,GAAG,UACHC,UAAU,YACVC,KAAK,SAEL,kBAACH,EAAA,EAAKI,OAAN,KACI,wBAAIF,UAAU,iBAAiBV,EAAKa,SAExC,kBAACL,EAAA,EAAKM,KAAN,CACIL,GAAG,WAEH,kBAACM,EAAA,EAAD,CAAWC,QAAQ,QAAQN,UAAU,eACjC,kBAACK,EAAA,EAAUE,KAAX,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,sCACA,4BAAKnB,EAAKG,OAAV,MAEJ,kBAACgB,EAAA,EAAD,KACI,qCACA,4BAAKnB,EAAKoB,YAM9B,kBAACZ,EAAA,EAAKa,OAAN,CAAaX,UAAU,eACnB,0BAAMA,UAAU,qBAAhB,iBAAgDV,EAAKI,UAArD,OAGR,kBAACI,EAAA,EAAD,CACIC,GAAG,UACHC,UAAU,eACVC,KAAK,SAEL,kBAACH,EAAA,EAAKI,OAAN,KACI,wBAAIF,UAAU,iBAAiBT,EAAQY,SAE3C,kBAACL,EAAA,EAAKM,KAAN,CACIL,GAAG,WAEH,kBAACM,EAAA,EAAD,CAAWC,QAAQ,QAAQN,UAAU,eACjC,kBAACK,EAAA,EAAUE,KAAX,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,sCACA,4BAAKlB,EAAQE,OAAb,MAEJ,kBAACgB,EAAA,EAAD,KACI,qCACA,4BAAKlB,EAAQmB,YAMjC,kBAACZ,EAAA,EAAKa,OAAN,CAAaX,UAAU,eACnB,0BAAMA,UAAU,qBAAhB,iBAAgDT,EAAQG,UAAxD,OAGR,kBAACI,EAAA,EAAD,CACIC,GAAG,YACHC,UAAU,aACVC,KAAK,SAEL,kBAACH,EAAA,EAAKI,OAAN,KACI,wBAAIF,UAAU,iBAAiBR,EAAMW,SAEzC,kBAACL,EAAA,EAAKM,KAAN,CACIL,GAAG,aAEH,kBAACM,EAAA,EAAD,CAAWC,QAAQ,QAAQN,UAAU,eACjC,kBAACK,EAAA,EAAUE,KAAX,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,sCACA,4BAAKjB,EAAMC,OAAX,MAEJ,kBAACgB,EAAA,EAAD,KACI,qCACA,4BAAKjB,EAAMkB,YAM/B,kBAACZ,EAAA,EAAKa,OAAN,CAAaX,UAAU,eACnB,0BAAMA,UAAU,qBAAhB,kBAAiDR,EAAME,UAAvD,Y,QChHbkB,G,MAjBA,WACb,OACE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKhB,GAAG,QAAQO,QAAQ,SACtD,kBAACX,EAAA,EAAD,CAAWK,UAAU,0BACnB,kBAACa,EAAA,EAAOG,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAI,mDACJlB,UAAU,2BACVmB,IAAI,0BAGR,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,8B,QCWtBC,G,MArBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACI,kBAAC,WAAD,KACI,kBAAC5B,EAAA,EAAD,CAAWK,UAAU,QACrB,wBAAIA,UAAU,UAAd,YACI,kBAACwB,EAAA,EAAD,CAAaxB,UAAU,YAClBuB,EAASE,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAAO,OAC7B,kBAAC7B,EAAA,EAAD,CAAO8B,IAAKD,EAAQE,KAChB,kBAAC/B,EAAA,EAAKgC,IAAN,CAAUxB,QAAQ,MAAMY,IAAKS,EAAQI,aACrC,kBAACjC,EAAA,EAAKM,KAAN,KACA,wBAAIJ,UAAU,kBAAiB,uBAAGiB,KAAMU,EAAQE,IAAKG,OAAO,SAASC,IAAI,uBAAuBN,EAAQO,QACxG,uBAAGlC,UAAU,kBAAb,YAAwC2B,EAAQQ,kB,MC6C7DC,MAtDf,WAAe,MAGuBC,mBAAS,IAHhC,mBAGNd,EAHM,KAGIe,EAHJ,OAMwBD,mBAAS,IANjC,mBAMNhD,EANM,KAMGkD,EANH,OAOkBF,mBAAS,IAP3B,mBAON/C,EAPM,KAOAkD,EAPA,OAQwBH,mBAAS,IARjC,mBAQN9C,EARM,KAQGkD,EARH,OASoBJ,mBAAS,IAT7B,mBASN7C,EATM,KASCkD,EATD,KAYPC,EAAY,uCAAG,8BAAAC,EAAA,sEACDC,MAAM,+DADL,cACbC,EADa,gBAEGA,EAAIC,OAFP,OAEbC,EAFa,OAInBT,EAAkBS,EAAQ,GAAGC,MAC7BT,EAAeQ,EAAQ,GAAGC,MAC1BR,EAAkBO,EAAQ,GAAGC,MAC7BP,EAAgBM,EAAQ,GAAGC,MAPR,4CAAH,qDAWZC,EAAiB,uCAAG,8BAAAN,EAAA,4DACd,2GADc,SAENC,MADR,4GADc,cAElBM,EAFkB,gBAGDA,EAAIJ,OAHH,OAGlBxB,EAHkB,OAIxBe,EAAgBf,EAAS6B,UAJD,2CAAH,qDAavB,OALAC,qBAAW,WACTV,IACAO,MACC,IAGD,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAACvD,EAAA,EAAD,KACE,kBAAC,EAAD,CACEN,QAASA,EACTC,KAAMA,EACNC,QAASA,EACTC,MAAOA,IAET,kBAAC,EAAD,CACE+B,SAAUA,OC1CA+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.71e63b18.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Container, Row, Col, Card, ListGroup, CardDeck } from 'react-bootstrap';\r\nimport '../styles/Dolar.css';\r\n\r\nconst Dolar = ({oficial, blue, turista,bolsa}) => {\r\n\r\n    if(turista.compra === \"No Cotiza\"){\r\n        turista.compra = \"-\"\r\n    } else if (turista.variacion === \"No Cotiza\"){\r\n        turista.variacion = \"-\"\r\n    }\r\n  \r\n    return ( \r\n        <Fragment>\r\n            <Container>\r\n                <CardDeck id=\"deckNoticias\">\r\n                    <Card \r\n                        bg=\"success\"\r\n                        className=\"dolarOficial\"\r\n                        text=\"white\"\r\n                    >\r\n                        <Card.Header>\r\n                            <h5 className=\"titulo-moneda\">{oficial.nombre}</h5>\r\n                        </Card.Header>\r\n                        <Card.Body \r\n                            bg=\"success\"\r\n                        >\r\n                            <ListGroup variant=\"flush\" className=\"text-center\">\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col >\r\n                                            <h6>Compra</h6>\r\n                                            <h4>{oficial.compra} </h4>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <h6>Venta</h6>\r\n                                            <h4>{oficial.venta}</h4>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-center\">\r\n                            <span className=\"monedas-variacion\">Variación: {oficial.variacion}%</span>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                    <Card \r\n                        bg=\"primary\"\r\n                        className=\"dolarBlue\"\r\n                        text=\"white\"\r\n                    >\r\n                        <Card.Header>\r\n                            <h5 className=\"titulo-moneda\">{blue.nombre}</h5>\r\n                        </Card.Header>\r\n                        <Card.Body \r\n                            bg=\"primary\"\r\n                        >\r\n                            <ListGroup variant=\"flush\" className=\"text-center\">\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col >\r\n                                            <h6>Compra</h6>\r\n                                            <h4>{blue.compra} </h4>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <h6>Venta</h6>\r\n                                            <h4>{blue.venta}</h4>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-center\">\r\n                            <span className=\"monedas-variacion\">Variación: {blue.variacion}%</span>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                    <Card \r\n                        bg=\"warning\"\r\n                        className=\"dolarTurista\"\r\n                        text=\"white\"\r\n                    >\r\n                        <Card.Header>\r\n                            <h5 className=\"titulo-moneda\">{turista.nombre}</h5>\r\n                        </Card.Header>\r\n                        <Card.Body \r\n                            bg=\"warning\"\r\n                        >\r\n                            <ListGroup variant=\"flush\" className=\"text-center\">\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col >\r\n                                            <h6>Compra</h6>\r\n                                            <h4>{turista.compra} </h4>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <h6>Venta</h6>\r\n                                            <h4>{turista.venta}</h4>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-center\">\r\n                            <span className=\"monedas-variacion\">Variación: {turista.variacion}%</span>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                    <Card \r\n                        bg=\"secondary\"\r\n                        className=\"dolarBolsa\"\r\n                        text=\"white\"\r\n                    >\r\n                        <Card.Header>\r\n                            <h5 className=\"titulo-moneda\">{bolsa.nombre}</h5>\r\n                        </Card.Header>\r\n                        <Card.Body \r\n                            bg=\"secondary\"\r\n                        >\r\n                            <ListGroup variant=\"flush\" className=\"text-center\">\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col >\r\n                                            <h6>Compra</h6>\r\n                                            <h4>{bolsa.compra} </h4>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <h6>Venta</h6>\r\n                                            <h4>{bolsa.venta}</h4>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-center\">\r\n                            <span className=\"monedas-variacion\"> Variación: {bolsa.variacion}%</span>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </CardDeck>\r\n            </Container>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Dolar;","import React from \"react\";\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\nimport \"./NavBar.css\"\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n      <Container className=\"justify-content-center\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img\r\n            src=\"https://mameluc.com.ar/logo-economiargentina.png\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"React Bootstrap logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, {Fragment} from 'react'\r\nimport { Container, CardColumns, Card} from 'react-bootstrap';\r\nimport \"../styles/Noticias.css\";\r\n\r\n\r\nconst Noticias = ({ noticias }) => {\r\n    return (\r\n        <Fragment>\r\n            <Container className=\"mt-5\">\r\n            <h5 className=\"header\">NOTICIAS</h5>\r\n                <CardColumns className=\"noticias\">\r\n                    {noticias.slice(0, 8).map(noticia => (\r\n                        <Card  key={noticia.url}>\r\n                            <Card.Img variant=\"top\" src={noticia.urlToImage} />\r\n                            <Card.Body>\r\n                            <h6 className=\"titulo-noticia\"><a href={noticia.url} target=\"_blank\" rel=\"noopener noreferrer\">{noticia.title}</a></h6>\r\n                            <p className=\"fuente-noticia\"> Fuente: {noticia.author}</p>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))}\r\n                </CardColumns>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Noticias;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Dolar from './components/Dolar';\r\nimport NavBar from './components/NavBar';\r\nimport Noticias from './components/Noticias';\r\nimport { Container } from \"react-bootstrap\";\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  // State Noticias\r\n  const [noticias, guardarNoticias] = useState([]);\r\n\r\n  // State tipos de dolar\r\n  const [oficial, actualizarOficial] = useState({});\r\n  const [blue, actualizarBlue] = useState({});\r\n  const [turista, actualizarTurista] = useState({});\r\n  const [bolsa, actualizarBolsa] = useState({});\r\n  \r\n  // API DOLAR\r\n  const consultarAPI = async () => {\r\n    const api = await fetch('https://www.dolarsi.com/api/api.php?type=valoresprincipales')\r\n    const dolares = await api.json();\r\n\r\n    actualizarOficial(dolares[0].casa);\r\n    actualizarBlue(dolares[1].casa);\r\n    actualizarTurista(dolares[6].casa);\r\n    actualizarBolsa(dolares[4].casa);\r\n  }\r\n\r\n  // API NOTICIAS\r\n  const consultarNoticias = async () => {\r\n    let url = 'http://newsapi.org/v2/top-headlines?country=ar&category=business&apiKey=7dc87c1a282a4cd68740956a1e7bc760'\r\n    const res = await fetch(url)\r\n    const noticias = await res.json();\r\n    guardarNoticias(noticias.articles);\r\n}\r\n\r\n\r\n  useEffect( () => {\r\n    consultarAPI();\r\n    consultarNoticias();\r\n  }, [])\r\n  \r\n  return (\r\n    <Fragment>\r\n      <NavBar />\r\n      <Container>\r\n        <Dolar \r\n          oficial={oficial}\r\n          blue={blue}\r\n          turista={turista} \r\n          bolsa={bolsa}\r\n        />\r\n        <Noticias \r\n          noticias={noticias}\r\n        />\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}